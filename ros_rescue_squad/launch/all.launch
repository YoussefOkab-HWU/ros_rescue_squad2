<launch>

  <arg name="no_static_map" default="false"/>

  <arg name="base_global_planner" default="navfn/NavfnROS"/>
  <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/> <!--local planner used-->
  
  <arg name="map_file" default="$(find ros_rescue_squad)/maps/ros_rescue_squad_map.yaml"/> <!--Runs the map created by slam mapping-->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <node pkg= "ros_rescue_squad" type= "obstacle_avoidance.py" name= "move_base_action_client"  output="screen"> <!--moves the rosbot according to the path plann in obstacle_avoidance.py-->
  </node>   
  <node pkg= "find_object_2d" type= "print_objects_detected" name= "objects_detected"  output="screen">  <!--prints location of sign-->
  </node> 
      
  
  <include file="$(find ros_rescue_squad)/launch/detection.launch" /> <!--Runs the image detection software-->
  
  
  <!--Launch rviz with config file-->
  <include file="$(find ros_rescue_squad)/launch/amcl_omni.launch" /> <!--Runs the amcl node-->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find ros_rescue_squad)/rviz/rosassignment3.rviz"/> <!--loads the rviz with the configurations needed for the code to be used-->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
 <!--movemeent and trajactory planning-->
    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <param name="base_local_planner" value="$(arg base_local_planner)"/>  
    <rosparam file="$(find ros_rescue_squad)/config/move_base.yaml" command="load"/>
    <rosparam file="$(find ros_rescue_squad)/config/trajectory_planner.yaml" command="load"/> 


    <!-- observation sources located in costmap_common.yaml -->
    <rosparam file="$(find ros_rescue_squad)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find ros_rescue_squad)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />

    <!-- local costmap, adjusting costmap size  -->
    <rosparam file="$(find ros_rescue_squad)/config/local_costmap_params.yaml" command="load" ns="local_costmap" />
    <arg name="map_file" default="$(find ros_rescue_squad)/maps/ros_rescue_squad_map.yaml"/>
    <param name="local_costmap/width" value="10.0"/>
    <param name="local_costmap/height" value="10.0"/>

    <!-- static global costmap, static map gives size-->
    <rosparam file="$(find ros_rescue_squad)/config/costmap_global_static.yaml" command="load" ns="global_costmap" unless="$(arg no_static_map)"/>
    <rosparam file="$(find ros_rescue_squad)/config/global_costmap_params.yaml" command="load" ns="global_costmap"/>
    
    <!-- global costmap with laser-->
    <rosparam file="$(find ros_rescue_squad)/config/costmap_global_laser.yaml" command="load" ns="global_costmap" if="$(arg no_static_map)"/>
    <param name="global_costmap/width" value="100.0" if="$(arg no_static_map)"/>
    <param name="global_costmap/height" value="100.0" if="$(arg no_static_map)"/>

   
  </node>

</launch>
